'''
1. 문제요약
- 왼손 검지손가락, 오른손 검지손가락의 처음 위치와 문자열이 주어질 때, 문자열을 출력하는 데에 걸리는 시간의 최솟값 구하기
- a의 좌표가 (x1, y1)이고, b의 좌표가 (x2, y2)일 때, a에 위치한 성우의 손가락이 b로 이동하는 데에는 a와 b의 택시 거리 |x1-x2|+|y1-y2| 만큼의 시간이 걸림
- 각 키를 누르는 데에는 1의 시간이 걸림
- 두 손을 동시에 움직일 수 없음

2. 아이디어(문제접근법)
- 각 키의 x, y좌표와 어떤 손으로 눌러야 하는지를 미리 정의해놓고 주어진 문자열의 각 문자를 반복문을 돌면서 시간 계산
- 쿼티식 키보드를 한글 자판으로 바꿨을 때, 자음은 왼손으로, 모음은 오른손으로 눌러야 함

3. 어려움 및 해결방식
- 각 키의 여러 정보를 저장해야 하므로 dictionary 사용
'''

keyboard = {
    'q':('l',0,0),
    'w':('l',0,1),
    'e':('l',0,2),
    'r':('l',0,3),
    't':('l',0,4),
    'y':('r',0,5),
    'u':('r',0,6),
    'i':('r',0,7),
    'o':('r',0,8),
    'p':('r',0,9),
    'a':('l',1,0),
    's':('l',1,1),
    'd':('l',1,2),
    'f':('l',1,3),
    'g':('l',1,4),
    'h':('r',1,5),
    'j':('r',1,6),
    'k':('r',1,7),
    'l':('r',1,8),
    'z':('l',2,0),
    'x':('l',2,1),
    'c':('l',2,2),
    'v':('l',2,3),
    'b':('r',2,4),
    'n':('r',2,5),
    'm':('r',2,6),
}
time = 0

sl, sr = input().split()
string = input()

for s in string:
    if keyboard[s][0] == 'l':
        time += abs(keyboard[sl][1] - keyboard[s][1]) + abs(keyboard[sl][2] - keyboard[s][2]) + 1
        sl = s
    elif keyboard[s][0] == 'r':
        time += abs(keyboard[sr][1] - keyboard[s][1]) + abs(keyboard[sr][2] - keyboard[s][2]) + 1
        sr = s

print(time)